name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APP_URL: http://178.209.127.213:8080  # Создал переменную и заменил на реальный URL

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python manage.py test

      - name: Run Bandit (SAST)
        run: |
          pip install bandit
          bandit -r . -f json -o bandit_results.json || true

      - name: Check Bandit results
        run: |
          if grep -q '"issue_confidence": "HIGH"' bandit_results.json; then
            echo "Critical vulnerabilities found. Pipeline stopped."
            exit 1
          else
            echo "No critical vulnerabilities found."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /path/to/project
            git pull origin main
            docker-compose up --build -d

  dast:
    runs-on: ubuntu-latest
    needs: deploy  # Запускаем DAST только после успешного деплоя
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run OWASP ZAP (DAST)
        run: |
          docker run -v $(pwd):/zap/wrk -t owasp/zap2docker-stable zap-baseline.py \
            -t ${{ env.APP_URL }} -r zap_report.html || true

      - name: Check OWASP ZAP results
        run: |
          if grep -q '"risk": "High"' zap_report.html; then
            echo "Critical vulnerabilities found. Pipeline stopped."
            exit 1
          else
            echo "No critical vulnerabilities found."
          fi

      - name: Upload OWASP ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

      - name: Comment on PR
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Critical vulnerabilities found. Please fix them before merging."
            })
